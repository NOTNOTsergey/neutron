#ifndef KBD_H
#define KBD_H

#include "../../stdlib.h"

#define KBD_EVENT_QUEUE_DEPTH                   128

typedef enum {
    KBD_SCAN_LIST_START,

    KBD_SCAN_ESC, KBD_SCAN_F1, KBD_SCAN_F2, KBD_SCAN_F3, KBD_SCAN_F4, KBD_SCAN_F5,  KBD_SCAN_F6,
        KBD_SCAN_F7, KBD_SCAN_F8, KBD_SCAN_F9, KBD_SCAN_F10, KBD_SCAN_F11, KBD_SCAN_F12, KBD_SCAN_PRT_SC_SYSRQ,
        KBD_SCAN_PAUSE_BREAK, KBD_SCAN_INSERT, KBD_SCAN_DELETE,
    KBD_SCAN_BACK_TICK, KBD_SCAN_1, KBD_SCAN_2, KBD_SCAN_3, KBD_SCAN_4, KBD_SCAN_5, KBD_SCAN_6,
        KBD_SCAN_7, KBD_SCAN_8, KBD_SCAN_9, KBD_SCAN_0, KBD_SCAN_MINUS, KBD_SCAN_EQUAL, KBD_SCAN_BACKSPACE,
    KBD_SCAN_TAB, KBD_SCAN_Q, KBD_SCAN_W, KBD_SCAN_E, KBD_SCAN_R, KBD_SCAN_T, KBD_SCAN_Y,
        KBD_SCAN_U, KBD_SCAN_I, KBD_SCAN_O, KBD_SCAN_P, KBD_SCAN_LEFT_SQUARE_BRACKET, KBD_SCAN_RIGHT_SQUARE_BRACKET, KBD_SCAN_BACKSLASH,
    KBD_SCAN_CAPS_LOCK, KBD_SCAN_A, KBD_SCAN_S, KBD_SCAN_D, KBD_SCAN_F, KBD_SCAN_G, KBD_SCAN_H, KBD_SCAN_J,
        KBD_SCAN_K, KBD_SCAN_L, KBD_SCAN_SEMICOLON, KBD_SCAN_TICK, KBD_SCAN_ENTER,
    KBD_SCAN_LEFT_SHIFT, KBD_SCAN_Z, KBD_SCAN_X, KBD_SCAN_C, KBD_SCAN_V, KBD_SCAN_B, KBD_SCAN_N,
        KBD_SCAN_M, KBD_SCAN_COMMA, KBD_SCAN_PERIOD, KBD_SCAN_SLASH, KBD_SCAN_RIGHT_SHIFT,
    KBD_SCAN_LEFT_CONTROL, KBD_SCAN_SUPER, KBD_SCAN_LEFT_ALT, KBD_SCAN_SPACE, KBD_SCAN_RIGHT_ALT,
        KBD_SCAN_CONTEXT, KBD_SCAN_RIGHT_CONTROL, KBD_SCAN_UP_ARROW, KBD_SCAN_LEFT_ARROW, KBD_SCAN_DOWN_ARROW, KBD_SCAN_RIGHT_ARROW,
    KBD_SCAN_HOME, KBD_SCAN_PAGE_UP, KBD_SCAN_PAGE_DOWN, KBD_SCAN_END, KBD_SCAN_NUM_LOCK,
        KBD_SCAN_KEYPAD_DIVIDE, KBD_SCAN_KEYPAD_MULTIPLY, KBD_SCAN_KEYPAD_MINUS, KBD_SCAN_KEYPAD_7,
        KBD_SCAN_KEYPAD_8, KBD_SCAN_KEYPAD_9, KBD_SCAN_KEYPAD_4, KBD_SCAN_KEYPAD_5, KBD_SCAN_KEYPAD_6,
        KBD_SCAN_KEYPAD_1, KBD_SCAN_KEYPAD_2, KBD_SCAN_KEYPAD_3, KBD_SCAN_KEYPAD_0, KBD_SCAN_KEYPAD_PERIOD,
        KBD_SCAN_KEYPAD_ADD, KBD_SCAN_KEYPAD_ENTER,

    KBD_SCAN_LIST_END
} kbd_scan_code_t;

#define KBD_SCAN_CODE_COUNT (KBD_SCAN_LIST_END - KBD_SCAN_LIST_START)

typedef struct {
    kbd_scan_code_t scan_code;
    char character;
    uint8_t state;
} kbd_event_t;

typedef struct {
    kbd_scan_code_t scan;
    //The character with no shift
    char c_n;
    //The character with shift
    char c_s;
} kbd_scan_char_map_t;

#define KBD_KEY_STATE_NOT_PRESSED               0
#define KBD_KEY_STATE_PRESSED                   1
#define KBD_KEY_STATE_CHAR                      2

void kbd_set_key(kbd_scan_code_t scan_code, uint8_t state);
uint8_t kbd_pop_event(kbd_event_t* event);

#endif